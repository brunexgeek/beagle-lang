function func1() : void {
	let value : number = 5;
  print(5, 5+6)()(`asd`);
  box.open(3).put(ball).d = 9;
}

function func2( x : number ) : void {
    print = `Hello world`;

}

function func3( x : number, y : string ) : number {
    let z = x * 235;
    do {
      z = (z / 2) * 4 + x;
    } while(z < 0);
    return z;
}

function buildName(firstName: string, lastName = "Smith") {
  fileName += 8;
  while (fileName = 8) { fileName += 8;}
  return firstName + " " + lastName;
}

function buildName(firstName: string, lastName: string) {
  if (lastName && queue)
  {
    const counter = 0;

    return firstName + " " + lastName;
  }
  else
    return;
  while (true) i++;

}

function pickCard(x:number): number
{
  let y = 0;
  let z = 9;
  x += y += z;
  return x.toString();
}


interface bla extends Z implements A, B, C {
  papa : number;
  private bla() : number
  {
    return 8;
  }
  blaee() {

  }
}